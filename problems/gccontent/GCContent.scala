package problems

object GCContent extends App {
  def gcPercent(dna: String): String = {
    def gcPercent0(dna: List[Char], acc: Int): Double = {
      dna match {
        case x :: xs => {
          if (x == 'C' || x == 'G') gcPercent0(xs, acc + 1)
          else gcPercent0(xs, acc)
        }
        case Nil => acc
      }
    }
    
    val dnaList: List[Char] = dna.toList
    ((gcPercent0(dnaList, 0) / dnaList.length) * 100).toString().concat("%")
  }
  
  //println(gcPercent("CAGGCGAAGTTCGGGACTGTTATTCCACTTAGCGTAGCCGACCCAGCCCAGTCTTTATCGTGCATCCCTCTAACCCGCGCATGGGGGGGAACATTGAAAAATTGCACAACTAGCCGTACGCGTAAAGTCACGCCGCTCGCTATGATTCGTTCAATTAGACACGTTATGTCAAAAACTTCTGGCACCTCCTCGAAAGGGGATCCTCAATTAAGTCCAAATTGGTTACGCGCAGTGATGATTGTTTCTGGCAGGGGAAGTTAGGGCGATGGACATAGCCGCGGCGGCGGGGTTCCCCAGAGTCAACAGCTGGAATGGAACACTACGCAACCTCCATTACTTCATCTCTGACTCTTCCTAAGTGATTTAGACATGAAGATATAATTACTGGGAGGAATTGCACATGGTTTTTCCGTCGGCAAGAACTATCTGTCAAAAAATAGGCCCGAATCGCCTGTGTTGCGTGTTAGACTACGCCTCAGTGACTCTAGAAATTTTATTAAGCTGAATGCCAAGCGCAATGCGACGCTAGTAAAAGTGCTGGCTACCGCGATACACCTTACCCGTCTGGTCTACTTTCACGGGCCGAGGTGTCGAGGTTAGTCCTTTTAATCGTCGCCCACACAGCATATCTTATAGGAGCACGGCTCACAATCATGTGACGAGCTTCCACGGCGATAGCGCAAAACATAGACCTTTTGATCGTACTCGTGGACTAGAATCTGTAGTAGACTACACCAGGAATCCATGGTAAGTATTTCAACATTTCGACTCATGGATTAGGGCACCGATACAGCACGAAACTCTAATTCTCCAATTGCTTAATTCCACAGTACCGTGTCACGTCTGTATAATTAGGTGTTGTACATATTCGCATAATTAGCTGGCTGGCCCGTATATTGAATGTA"))
}